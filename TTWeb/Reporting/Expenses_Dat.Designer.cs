//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TTWeb.Reporting {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Expenses_Dat")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Expenses_Dat : global::System.Data.DataSet {
        
        private Reporting_SCH_ExpensesDataTable tableReporting_SCH_Expenses;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Expenses_Dat() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Expenses_Dat(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Reporting_SCH_Expenses"] != null)) {
                    base.Tables.Add(new Reporting_SCH_ExpensesDataTable(ds.Tables["Reporting_SCH_Expenses"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Reporting_SCH_ExpensesDataTable Reporting_SCH_Expenses {
            get {
                return this.tableReporting_SCH_Expenses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Expenses_Dat cln = ((Expenses_Dat)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Reporting_SCH_Expenses"] != null)) {
                    base.Tables.Add(new Reporting_SCH_ExpensesDataTable(ds.Tables["Reporting_SCH_Expenses"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableReporting_SCH_Expenses = ((Reporting_SCH_ExpensesDataTable)(base.Tables["Reporting_SCH_Expenses"]));
            if ((initTable == true)) {
                if ((this.tableReporting_SCH_Expenses != null)) {
                    this.tableReporting_SCH_Expenses.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Expenses_Dat";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Expenses_Dat.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReporting_SCH_Expenses = new Reporting_SCH_ExpensesDataTable();
            base.Tables.Add(this.tableReporting_SCH_Expenses);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeReporting_SCH_Expenses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Expenses_Dat ds = new Expenses_Dat();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Reporting_SCH_ExpensesRowChangeEventHandler(object sender, Reporting_SCH_ExpensesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Reporting_SCH_ExpensesDataTable : global::System.Data.TypedTableBase<Reporting_SCH_ExpensesRow> {
            
            private global::System.Data.DataColumn columnTT_ID;
            
            private global::System.Data.DataColumn columnSCHEDULE_DATE;
            
            private global::System.Data.DataColumn columnASSIGNED_USER;
            
            private global::System.Data.DataColumn columnCUR_TEAM;
            
            private global::System.Data.DataColumn columnRegisteredKm;
            
            private global::System.Data.DataColumn columnOVERTIME_HOURS;
            
            private global::System.Data.DataColumn columnGAS_COST;
            
            private global::System.Data.DataColumn columnGAS_COST_CREDIT;
            
            private global::System.Data.DataColumn columnTOLL_COST;
            
            private global::System.Data.DataColumn columnCONSUMABLES_COST;
            
            private global::System.Data.DataColumn columnCONSUMABLES_COST_CREDIT;
            
            private global::System.Data.DataColumn columnOUT_OF_BASE_OVERNIGHT_COST;
            
            private global::System.Data.DataColumn columnOUT_OF_BASE_OVERNIGHT_COST_CREDIT;
            
            private global::System.Data.DataColumn columnOUT_OF_BASE_MEALS_COST;
            
            private global::System.Data.DataColumn columnTAXI;
            
            private global::System.Data.DataColumn columnTAXI_CREDIT;
            
            private global::System.Data.DataColumn columnPARKING;
            
            private global::System.Data.DataColumn columnPARKING_CREDIT;
            
            private global::System.Data.DataColumn columnOTHER_CAR_EXPENSES;
            
            private global::System.Data.DataColumn columnOTHER_CAR_EXPENSES_CREDIT;
            
            private global::System.Data.DataColumn columnFERRY_TICKETS;
            
            private global::System.Data.DataColumn columnFERRY_TICKETS_CREDIT;
            
            private global::System.Data.DataColumn columnFERRY_CAR_LIMIT_VIOLATION;
            
            private global::System.Data.DataColumn columnFERRY_CAR_LIMIT_VIOLATION_CREDIT;
            
            private global::System.Data.DataColumn columnAIRLINE_TICKETS;
            
            private global::System.Data.DataColumn columnAIRLINE_TICKETS_CREDIT;
            
            private global::System.Data.DataColumn columnAIRLINE_OVERWEIGHT;
            
            private global::System.Data.DataColumn columnAIRLINE_OVERWEIGHT_CREDIT;
            
            private global::System.Data.DataColumn columnOTHER_TICKETS;
            
            private global::System.Data.DataColumn columnOTHER_TICKETS_CREDIT;
            
            private global::System.Data.DataColumn columnOFFICE_EXPENSES;
            
            private global::System.Data.DataColumn columnOFFICE_EXPENSES_CREDIT;
            
            private global::System.Data.DataColumn columnADVANCE_AMOUNT;
            
            private global::System.Data.DataColumn columnTOLL_COST_CREDIT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Reporting_SCH_ExpensesDataTable() {
                this.TableName = "Reporting_SCH_Expenses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Reporting_SCH_ExpensesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Reporting_SCH_ExpensesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TT_IDColumn {
                get {
                    return this.columnTT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEDULE_DATEColumn {
                get {
                    return this.columnSCHEDULE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSIGNED_USERColumn {
                get {
                    return this.columnASSIGNED_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUR_TEAMColumn {
                get {
                    return this.columnCUR_TEAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegisteredKmColumn {
                get {
                    return this.columnRegisteredKm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OVERTIME_HOURSColumn {
                get {
                    return this.columnOVERTIME_HOURS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GAS_COSTColumn {
                get {
                    return this.columnGAS_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GAS_COST_CREDITColumn {
                get {
                    return this.columnGAS_COST_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOLL_COSTColumn {
                get {
                    return this.columnTOLL_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSUMABLES_COSTColumn {
                get {
                    return this.columnCONSUMABLES_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSUMABLES_COST_CREDITColumn {
                get {
                    return this.columnCONSUMABLES_COST_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUT_OF_BASE_OVERNIGHT_COSTColumn {
                get {
                    return this.columnOUT_OF_BASE_OVERNIGHT_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUT_OF_BASE_OVERNIGHT_COST_CREDITColumn {
                get {
                    return this.columnOUT_OF_BASE_OVERNIGHT_COST_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUT_OF_BASE_MEALS_COSTColumn {
                get {
                    return this.columnOUT_OF_BASE_MEALS_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXIColumn {
                get {
                    return this.columnTAXI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXI_CREDITColumn {
                get {
                    return this.columnTAXI_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PARKINGColumn {
                get {
                    return this.columnPARKING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PARKING_CREDITColumn {
                get {
                    return this.columnPARKING_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHER_CAR_EXPENSESColumn {
                get {
                    return this.columnOTHER_CAR_EXPENSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHER_CAR_EXPENSES_CREDITColumn {
                get {
                    return this.columnOTHER_CAR_EXPENSES_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FERRY_TICKETSColumn {
                get {
                    return this.columnFERRY_TICKETS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FERRY_TICKETS_CREDITColumn {
                get {
                    return this.columnFERRY_TICKETS_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FERRY_CAR_LIMIT_VIOLATIONColumn {
                get {
                    return this.columnFERRY_CAR_LIMIT_VIOLATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FERRY_CAR_LIMIT_VIOLATION_CREDITColumn {
                get {
                    return this.columnFERRY_CAR_LIMIT_VIOLATION_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AIRLINE_TICKETSColumn {
                get {
                    return this.columnAIRLINE_TICKETS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AIRLINE_TICKETS_CREDITColumn {
                get {
                    return this.columnAIRLINE_TICKETS_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AIRLINE_OVERWEIGHTColumn {
                get {
                    return this.columnAIRLINE_OVERWEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AIRLINE_OVERWEIGHT_CREDITColumn {
                get {
                    return this.columnAIRLINE_OVERWEIGHT_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHER_TICKETSColumn {
                get {
                    return this.columnOTHER_TICKETS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHER_TICKETS_CREDITColumn {
                get {
                    return this.columnOTHER_TICKETS_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OFFICE_EXPENSESColumn {
                get {
                    return this.columnOFFICE_EXPENSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OFFICE_EXPENSES_CREDITColumn {
                get {
                    return this.columnOFFICE_EXPENSES_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADVANCE_AMOUNTColumn {
                get {
                    return this.columnADVANCE_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOLL_COST_CREDITColumn {
                get {
                    return this.columnTOLL_COST_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Reporting_SCH_ExpensesRow this[int index] {
                get {
                    return ((Reporting_SCH_ExpensesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Reporting_SCH_ExpensesRowChangeEventHandler Reporting_SCH_ExpensesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Reporting_SCH_ExpensesRowChangeEventHandler Reporting_SCH_ExpensesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Reporting_SCH_ExpensesRowChangeEventHandler Reporting_SCH_ExpensesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Reporting_SCH_ExpensesRowChangeEventHandler Reporting_SCH_ExpensesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddReporting_SCH_ExpensesRow(Reporting_SCH_ExpensesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Reporting_SCH_ExpensesRow AddReporting_SCH_ExpensesRow(
                        string TT_ID, 
                        System.DateTime SCHEDULE_DATE, 
                        string ASSIGNED_USER, 
                        string CUR_TEAM, 
                        double RegisteredKm, 
                        float OVERTIME_HOURS, 
                        float GAS_COST, 
                        float GAS_COST_CREDIT, 
                        float TOLL_COST, 
                        float CONSUMABLES_COST, 
                        float CONSUMABLES_COST_CREDIT, 
                        float OUT_OF_BASE_OVERNIGHT_COST, 
                        float OUT_OF_BASE_OVERNIGHT_COST_CREDIT, 
                        float OUT_OF_BASE_MEALS_COST, 
                        float TAXI, 
                        float TAXI_CREDIT, 
                        float PARKING, 
                        float PARKING_CREDIT, 
                        float OTHER_CAR_EXPENSES, 
                        float OTHER_CAR_EXPENSES_CREDIT, 
                        float FERRY_TICKETS, 
                        float FERRY_TICKETS_CREDIT, 
                        float FERRY_CAR_LIMIT_VIOLATION, 
                        float FERRY_CAR_LIMIT_VIOLATION_CREDIT, 
                        float AIRLINE_TICKETS, 
                        float AIRLINE_TICKETS_CREDIT, 
                        float AIRLINE_OVERWEIGHT, 
                        float AIRLINE_OVERWEIGHT_CREDIT, 
                        float OTHER_TICKETS, 
                        float OTHER_TICKETS_CREDIT, 
                        float OFFICE_EXPENSES, 
                        float OFFICE_EXPENSES_CREDIT, 
                        float ADVANCE_AMOUNT, 
                        float TOLL_COST_CREDIT) {
                Reporting_SCH_ExpensesRow rowReporting_SCH_ExpensesRow = ((Reporting_SCH_ExpensesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TT_ID,
                        SCHEDULE_DATE,
                        ASSIGNED_USER,
                        CUR_TEAM,
                        RegisteredKm,
                        OVERTIME_HOURS,
                        GAS_COST,
                        GAS_COST_CREDIT,
                        TOLL_COST,
                        CONSUMABLES_COST,
                        CONSUMABLES_COST_CREDIT,
                        OUT_OF_BASE_OVERNIGHT_COST,
                        OUT_OF_BASE_OVERNIGHT_COST_CREDIT,
                        OUT_OF_BASE_MEALS_COST,
                        TAXI,
                        TAXI_CREDIT,
                        PARKING,
                        PARKING_CREDIT,
                        OTHER_CAR_EXPENSES,
                        OTHER_CAR_EXPENSES_CREDIT,
                        FERRY_TICKETS,
                        FERRY_TICKETS_CREDIT,
                        FERRY_CAR_LIMIT_VIOLATION,
                        FERRY_CAR_LIMIT_VIOLATION_CREDIT,
                        AIRLINE_TICKETS,
                        AIRLINE_TICKETS_CREDIT,
                        AIRLINE_OVERWEIGHT,
                        AIRLINE_OVERWEIGHT_CREDIT,
                        OTHER_TICKETS,
                        OTHER_TICKETS_CREDIT,
                        OFFICE_EXPENSES,
                        OFFICE_EXPENSES_CREDIT,
                        ADVANCE_AMOUNT,
                        TOLL_COST_CREDIT};
                rowReporting_SCH_ExpensesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReporting_SCH_ExpensesRow);
                return rowReporting_SCH_ExpensesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Reporting_SCH_ExpensesDataTable cln = ((Reporting_SCH_ExpensesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Reporting_SCH_ExpensesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTT_ID = base.Columns["TT_ID"];
                this.columnSCHEDULE_DATE = base.Columns["SCHEDULE_DATE"];
                this.columnASSIGNED_USER = base.Columns["ASSIGNED_USER"];
                this.columnCUR_TEAM = base.Columns["CUR_TEAM"];
                this.columnRegisteredKm = base.Columns["RegisteredKm"];
                this.columnOVERTIME_HOURS = base.Columns["OVERTIME_HOURS"];
                this.columnGAS_COST = base.Columns["GAS_COST"];
                this.columnGAS_COST_CREDIT = base.Columns["GAS_COST_CREDIT"];
                this.columnTOLL_COST = base.Columns["TOLL_COST"];
                this.columnCONSUMABLES_COST = base.Columns["CONSUMABLES_COST"];
                this.columnCONSUMABLES_COST_CREDIT = base.Columns["CONSUMABLES_COST_CREDIT"];
                this.columnOUT_OF_BASE_OVERNIGHT_COST = base.Columns["OUT_OF_BASE_OVERNIGHT_COST"];
                this.columnOUT_OF_BASE_OVERNIGHT_COST_CREDIT = base.Columns["OUT_OF_BASE_OVERNIGHT_COST_CREDIT"];
                this.columnOUT_OF_BASE_MEALS_COST = base.Columns["OUT_OF_BASE_MEALS_COST"];
                this.columnTAXI = base.Columns["TAXI"];
                this.columnTAXI_CREDIT = base.Columns["TAXI_CREDIT"];
                this.columnPARKING = base.Columns["PARKING"];
                this.columnPARKING_CREDIT = base.Columns["PARKING_CREDIT"];
                this.columnOTHER_CAR_EXPENSES = base.Columns["OTHER_CAR_EXPENSES"];
                this.columnOTHER_CAR_EXPENSES_CREDIT = base.Columns["OTHER_CAR_EXPENSES_CREDIT"];
                this.columnFERRY_TICKETS = base.Columns["FERRY_TICKETS"];
                this.columnFERRY_TICKETS_CREDIT = base.Columns["FERRY_TICKETS_CREDIT"];
                this.columnFERRY_CAR_LIMIT_VIOLATION = base.Columns["FERRY_CAR_LIMIT_VIOLATION"];
                this.columnFERRY_CAR_LIMIT_VIOLATION_CREDIT = base.Columns["FERRY_CAR_LIMIT_VIOLATION_CREDIT"];
                this.columnAIRLINE_TICKETS = base.Columns["AIRLINE_TICKETS"];
                this.columnAIRLINE_TICKETS_CREDIT = base.Columns["AIRLINE_TICKETS_CREDIT"];
                this.columnAIRLINE_OVERWEIGHT = base.Columns["AIRLINE_OVERWEIGHT"];
                this.columnAIRLINE_OVERWEIGHT_CREDIT = base.Columns["AIRLINE_OVERWEIGHT_CREDIT"];
                this.columnOTHER_TICKETS = base.Columns["OTHER_TICKETS"];
                this.columnOTHER_TICKETS_CREDIT = base.Columns["OTHER_TICKETS_CREDIT"];
                this.columnOFFICE_EXPENSES = base.Columns["OFFICE_EXPENSES"];
                this.columnOFFICE_EXPENSES_CREDIT = base.Columns["OFFICE_EXPENSES_CREDIT"];
                this.columnADVANCE_AMOUNT = base.Columns["ADVANCE_AMOUNT"];
                this.columnTOLL_COST_CREDIT = base.Columns["TOLL_COST_CREDIT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTT_ID = new global::System.Data.DataColumn("TT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTT_ID);
                this.columnSCHEDULE_DATE = new global::System.Data.DataColumn("SCHEDULE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEDULE_DATE);
                this.columnASSIGNED_USER = new global::System.Data.DataColumn("ASSIGNED_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSIGNED_USER);
                this.columnCUR_TEAM = new global::System.Data.DataColumn("CUR_TEAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUR_TEAM);
                this.columnRegisteredKm = new global::System.Data.DataColumn("RegisteredKm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisteredKm);
                this.columnOVERTIME_HOURS = new global::System.Data.DataColumn("OVERTIME_HOURS", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVERTIME_HOURS);
                this.columnGAS_COST = new global::System.Data.DataColumn("GAS_COST", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAS_COST);
                this.columnGAS_COST_CREDIT = new global::System.Data.DataColumn("GAS_COST_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAS_COST_CREDIT);
                this.columnTOLL_COST = new global::System.Data.DataColumn("TOLL_COST", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOLL_COST);
                this.columnCONSUMABLES_COST = new global::System.Data.DataColumn("CONSUMABLES_COST", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSUMABLES_COST);
                this.columnCONSUMABLES_COST_CREDIT = new global::System.Data.DataColumn("CONSUMABLES_COST_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSUMABLES_COST_CREDIT);
                this.columnOUT_OF_BASE_OVERNIGHT_COST = new global::System.Data.DataColumn("OUT_OF_BASE_OVERNIGHT_COST", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_OF_BASE_OVERNIGHT_COST);
                this.columnOUT_OF_BASE_OVERNIGHT_COST_CREDIT = new global::System.Data.DataColumn("OUT_OF_BASE_OVERNIGHT_COST_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_OF_BASE_OVERNIGHT_COST_CREDIT);
                this.columnOUT_OF_BASE_MEALS_COST = new global::System.Data.DataColumn("OUT_OF_BASE_MEALS_COST", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_OF_BASE_MEALS_COST);
                this.columnTAXI = new global::System.Data.DataColumn("TAXI", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXI);
                this.columnTAXI_CREDIT = new global::System.Data.DataColumn("TAXI_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXI_CREDIT);
                this.columnPARKING = new global::System.Data.DataColumn("PARKING", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARKING);
                this.columnPARKING_CREDIT = new global::System.Data.DataColumn("PARKING_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARKING_CREDIT);
                this.columnOTHER_CAR_EXPENSES = new global::System.Data.DataColumn("OTHER_CAR_EXPENSES", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_CAR_EXPENSES);
                this.columnOTHER_CAR_EXPENSES_CREDIT = new global::System.Data.DataColumn("OTHER_CAR_EXPENSES_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_CAR_EXPENSES_CREDIT);
                this.columnFERRY_TICKETS = new global::System.Data.DataColumn("FERRY_TICKETS", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFERRY_TICKETS);
                this.columnFERRY_TICKETS_CREDIT = new global::System.Data.DataColumn("FERRY_TICKETS_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFERRY_TICKETS_CREDIT);
                this.columnFERRY_CAR_LIMIT_VIOLATION = new global::System.Data.DataColumn("FERRY_CAR_LIMIT_VIOLATION", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFERRY_CAR_LIMIT_VIOLATION);
                this.columnFERRY_CAR_LIMIT_VIOLATION_CREDIT = new global::System.Data.DataColumn("FERRY_CAR_LIMIT_VIOLATION_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFERRY_CAR_LIMIT_VIOLATION_CREDIT);
                this.columnAIRLINE_TICKETS = new global::System.Data.DataColumn("AIRLINE_TICKETS", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAIRLINE_TICKETS);
                this.columnAIRLINE_TICKETS_CREDIT = new global::System.Data.DataColumn("AIRLINE_TICKETS_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAIRLINE_TICKETS_CREDIT);
                this.columnAIRLINE_OVERWEIGHT = new global::System.Data.DataColumn("AIRLINE_OVERWEIGHT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAIRLINE_OVERWEIGHT);
                this.columnAIRLINE_OVERWEIGHT_CREDIT = new global::System.Data.DataColumn("AIRLINE_OVERWEIGHT_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAIRLINE_OVERWEIGHT_CREDIT);
                this.columnOTHER_TICKETS = new global::System.Data.DataColumn("OTHER_TICKETS", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_TICKETS);
                this.columnOTHER_TICKETS_CREDIT = new global::System.Data.DataColumn("OTHER_TICKETS_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_TICKETS_CREDIT);
                this.columnOFFICE_EXPENSES = new global::System.Data.DataColumn("OFFICE_EXPENSES", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFICE_EXPENSES);
                this.columnOFFICE_EXPENSES_CREDIT = new global::System.Data.DataColumn("OFFICE_EXPENSES_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFICE_EXPENSES_CREDIT);
                this.columnADVANCE_AMOUNT = new global::System.Data.DataColumn("ADVANCE_AMOUNT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADVANCE_AMOUNT);
                this.columnTOLL_COST_CREDIT = new global::System.Data.DataColumn("TOLL_COST_CREDIT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOLL_COST_CREDIT);
                this.columnTT_ID.ReadOnly = true;
                this.columnTT_ID.MaxLength = 5;
                this.columnASSIGNED_USER.MaxLength = 60;
                this.columnCUR_TEAM.MaxLength = 50;
                this.columnRegisteredKm.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Reporting_SCH_ExpensesRow NewReporting_SCH_ExpensesRow() {
                return ((Reporting_SCH_ExpensesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Reporting_SCH_ExpensesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Reporting_SCH_ExpensesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Reporting_SCH_ExpensesRowChanged != null)) {
                    this.Reporting_SCH_ExpensesRowChanged(this, new Reporting_SCH_ExpensesRowChangeEvent(((Reporting_SCH_ExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Reporting_SCH_ExpensesRowChanging != null)) {
                    this.Reporting_SCH_ExpensesRowChanging(this, new Reporting_SCH_ExpensesRowChangeEvent(((Reporting_SCH_ExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Reporting_SCH_ExpensesRowDeleted != null)) {
                    this.Reporting_SCH_ExpensesRowDeleted(this, new Reporting_SCH_ExpensesRowChangeEvent(((Reporting_SCH_ExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Reporting_SCH_ExpensesRowDeleting != null)) {
                    this.Reporting_SCH_ExpensesRowDeleting(this, new Reporting_SCH_ExpensesRowChangeEvent(((Reporting_SCH_ExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveReporting_SCH_ExpensesRow(Reporting_SCH_ExpensesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Expenses_Dat ds = new Expenses_Dat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Reporting_SCH_ExpensesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Reporting_SCH_ExpensesRow : global::System.Data.DataRow {
            
            private Reporting_SCH_ExpensesDataTable tableReporting_SCH_Expenses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Reporting_SCH_ExpensesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReporting_SCH_Expenses = ((Reporting_SCH_ExpensesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TT_ID {
                get {
                    try {
                        return ((string)(this[this.tableReporting_SCH_Expenses.TT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TT_ID\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.TT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SCHEDULE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableReporting_SCH_Expenses.SCHEDULE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEDULE_DATE\' in table \'Reporting_SCH_Expenses\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.SCHEDULE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ASSIGNED_USER {
                get {
                    try {
                        return ((string)(this[this.tableReporting_SCH_Expenses.ASSIGNED_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASSIGNED_USER\' in table \'Reporting_SCH_Expenses\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.ASSIGNED_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUR_TEAM {
                get {
                    try {
                        return ((string)(this[this.tableReporting_SCH_Expenses.CUR_TEAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUR_TEAM\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.CUR_TEAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RegisteredKm {
                get {
                    try {
                        return ((double)(this[this.tableReporting_SCH_Expenses.RegisteredKmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegisteredKm\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.RegisteredKmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OVERTIME_HOURS {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OVERTIME_HOURSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OVERTIME_HOURS\' in table \'Reporting_SCH_Expenses\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OVERTIME_HOURSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float GAS_COST {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.GAS_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GAS_COST\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.GAS_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float GAS_COST_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.GAS_COST_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GAS_COST_CREDIT\' in table \'Reporting_SCH_Expenses\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.GAS_COST_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TOLL_COST {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.TOLL_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOLL_COST\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.TOLL_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float CONSUMABLES_COST {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.CONSUMABLES_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSUMABLES_COST\' in table \'Reporting_SCH_Expenses\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.CONSUMABLES_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float CONSUMABLES_COST_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.CONSUMABLES_COST_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSUMABLES_COST_CREDIT\' in table \'Reporting_SCH_Expenses\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.CONSUMABLES_COST_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OUT_OF_BASE_OVERNIGHT_COST {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OUT_OF_BASE_OVERNIGHT_COST\' in table \'Reporting_SCH_Expense" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OUT_OF_BASE_OVERNIGHT_COST_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COST_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OUT_OF_BASE_OVERNIGHT_COST_CREDIT\' in table \'Reporting_SCH_" +
                                "Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COST_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OUT_OF_BASE_MEALS_COST {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_MEALS_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OUT_OF_BASE_MEALS_COST\' in table \'Reporting_SCH_Expenses\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_MEALS_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TAXI {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.TAXIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXI\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.TAXIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TAXI_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.TAXI_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXI_CREDIT\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.TAXI_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PARKING {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.PARKINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARKING\' in table \'Reporting_SCH_Expenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.PARKINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PARKING_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.PARKING_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARKING_CREDIT\' in table \'Reporting_SCH_Expenses\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.PARKING_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OTHER_CAR_EXPENSES {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER_CAR_EXPENSES\' in table \'Reporting_SCH_Expenses\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OTHER_CAR_EXPENSES_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSES_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER_CAR_EXPENSES_CREDIT\' in table \'Reporting_SCH_Expenses" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSES_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FERRY_TICKETS {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.FERRY_TICKETSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FERRY_TICKETS\' in table \'Reporting_SCH_Expenses\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.FERRY_TICKETSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FERRY_TICKETS_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.FERRY_TICKETS_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FERRY_TICKETS_CREDIT\' in table \'Reporting_SCH_Expenses\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.FERRY_TICKETS_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FERRY_CAR_LIMIT_VIOLATION {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FERRY_CAR_LIMIT_VIOLATION\' in table \'Reporting_SCH_Expenses" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FERRY_CAR_LIMIT_VIOLATION_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATION_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FERRY_CAR_LIMIT_VIOLATION_CREDIT\' in table \'Reporting_SCH_E" +
                                "xpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATION_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float AIRLINE_TICKETS {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.AIRLINE_TICKETSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AIRLINE_TICKETS\' in table \'Reporting_SCH_Expenses\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.AIRLINE_TICKETSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float AIRLINE_TICKETS_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.AIRLINE_TICKETS_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AIRLINE_TICKETS_CREDIT\' in table \'Reporting_SCH_Expenses\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.AIRLINE_TICKETS_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float AIRLINE_OVERWEIGHT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AIRLINE_OVERWEIGHT\' in table \'Reporting_SCH_Expenses\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float AIRLINE_OVERWEIGHT_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHT_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AIRLINE_OVERWEIGHT_CREDIT\' in table \'Reporting_SCH_Expenses" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHT_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OTHER_TICKETS {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OTHER_TICKETSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER_TICKETS\' in table \'Reporting_SCH_Expenses\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OTHER_TICKETSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OTHER_TICKETS_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OTHER_TICKETS_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHER_TICKETS_CREDIT\' in table \'Reporting_SCH_Expenses\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OTHER_TICKETS_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OFFICE_EXPENSES {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OFFICE_EXPENSESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFFICE_EXPENSES\' in table \'Reporting_SCH_Expenses\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OFFICE_EXPENSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OFFICE_EXPENSES_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.OFFICE_EXPENSES_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OFFICE_EXPENSES_CREDIT\' in table \'Reporting_SCH_Expenses\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.OFFICE_EXPENSES_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float ADVANCE_AMOUNT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.ADVANCE_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADVANCE_AMOUNT\' in table \'Reporting_SCH_Expenses\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.ADVANCE_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TOLL_COST_CREDIT {
                get {
                    try {
                        return ((float)(this[this.tableReporting_SCH_Expenses.TOLL_COST_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOLL_COST_CREDIT\' in table \'Reporting_SCH_Expenses\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableReporting_SCH_Expenses.TOLL_COST_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTT_IDNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.TT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTT_IDNull() {
                this[this.tableReporting_SCH_Expenses.TT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEDULE_DATENull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.SCHEDULE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEDULE_DATENull() {
                this[this.tableReporting_SCH_Expenses.SCHEDULE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsASSIGNED_USERNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.ASSIGNED_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetASSIGNED_USERNull() {
                this[this.tableReporting_SCH_Expenses.ASSIGNED_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUR_TEAMNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.CUR_TEAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUR_TEAMNull() {
                this[this.tableReporting_SCH_Expenses.CUR_TEAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegisteredKmNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.RegisteredKmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegisteredKmNull() {
                this[this.tableReporting_SCH_Expenses.RegisteredKmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOVERTIME_HOURSNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OVERTIME_HOURSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOVERTIME_HOURSNull() {
                this[this.tableReporting_SCH_Expenses.OVERTIME_HOURSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGAS_COSTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.GAS_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGAS_COSTNull() {
                this[this.tableReporting_SCH_Expenses.GAS_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGAS_COST_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.GAS_COST_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGAS_COST_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.GAS_COST_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOLL_COSTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.TOLL_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOLL_COSTNull() {
                this[this.tableReporting_SCH_Expenses.TOLL_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONSUMABLES_COSTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.CONSUMABLES_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONSUMABLES_COSTNull() {
                this[this.tableReporting_SCH_Expenses.CONSUMABLES_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONSUMABLES_COST_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.CONSUMABLES_COST_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONSUMABLES_COST_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.CONSUMABLES_COST_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOUT_OF_BASE_OVERNIGHT_COSTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOUT_OF_BASE_OVERNIGHT_COSTNull() {
                this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOUT_OF_BASE_OVERNIGHT_COST_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COST_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOUT_OF_BASE_OVERNIGHT_COST_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_OVERNIGHT_COST_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOUT_OF_BASE_MEALS_COSTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OUT_OF_BASE_MEALS_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOUT_OF_BASE_MEALS_COSTNull() {
                this[this.tableReporting_SCH_Expenses.OUT_OF_BASE_MEALS_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTAXINull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.TAXIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTAXINull() {
                this[this.tableReporting_SCH_Expenses.TAXIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTAXI_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.TAXI_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTAXI_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.TAXI_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPARKINGNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.PARKINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPARKINGNull() {
                this[this.tableReporting_SCH_Expenses.PARKINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPARKING_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.PARKING_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPARKING_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.PARKING_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOTHER_CAR_EXPENSESNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOTHER_CAR_EXPENSESNull() {
                this[this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOTHER_CAR_EXPENSES_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSES_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOTHER_CAR_EXPENSES_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.OTHER_CAR_EXPENSES_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFERRY_TICKETSNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.FERRY_TICKETSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFERRY_TICKETSNull() {
                this[this.tableReporting_SCH_Expenses.FERRY_TICKETSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFERRY_TICKETS_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.FERRY_TICKETS_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFERRY_TICKETS_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.FERRY_TICKETS_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFERRY_CAR_LIMIT_VIOLATIONNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFERRY_CAR_LIMIT_VIOLATIONNull() {
                this[this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFERRY_CAR_LIMIT_VIOLATION_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATION_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFERRY_CAR_LIMIT_VIOLATION_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.FERRY_CAR_LIMIT_VIOLATION_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAIRLINE_TICKETSNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.AIRLINE_TICKETSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAIRLINE_TICKETSNull() {
                this[this.tableReporting_SCH_Expenses.AIRLINE_TICKETSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAIRLINE_TICKETS_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.AIRLINE_TICKETS_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAIRLINE_TICKETS_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.AIRLINE_TICKETS_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAIRLINE_OVERWEIGHTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAIRLINE_OVERWEIGHTNull() {
                this[this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAIRLINE_OVERWEIGHT_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHT_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAIRLINE_OVERWEIGHT_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.AIRLINE_OVERWEIGHT_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOTHER_TICKETSNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OTHER_TICKETSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOTHER_TICKETSNull() {
                this[this.tableReporting_SCH_Expenses.OTHER_TICKETSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOTHER_TICKETS_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OTHER_TICKETS_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOTHER_TICKETS_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.OTHER_TICKETS_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOFFICE_EXPENSESNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OFFICE_EXPENSESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOFFICE_EXPENSESNull() {
                this[this.tableReporting_SCH_Expenses.OFFICE_EXPENSESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOFFICE_EXPENSES_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.OFFICE_EXPENSES_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOFFICE_EXPENSES_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.OFFICE_EXPENSES_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADVANCE_AMOUNTNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.ADVANCE_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADVANCE_AMOUNTNull() {
                this[this.tableReporting_SCH_Expenses.ADVANCE_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOLL_COST_CREDITNull() {
                return this.IsNull(this.tableReporting_SCH_Expenses.TOLL_COST_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOLL_COST_CREDITNull() {
                this[this.tableReporting_SCH_Expenses.TOLL_COST_CREDITColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Reporting_SCH_ExpensesRowChangeEvent : global::System.EventArgs {
            
            private Reporting_SCH_ExpensesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Reporting_SCH_ExpensesRowChangeEvent(Reporting_SCH_ExpensesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Reporting_SCH_ExpensesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TTWeb.Reporting.Expenses_DatTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Reporting_SCH_ExpensesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Reporting_SCH_ExpensesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Reporting_SCH_Expenses";
            tableMapping.ColumnMappings.Add("TT_ID", "TT_ID");
            tableMapping.ColumnMappings.Add("SCHEDULE_DATE", "SCHEDULE_DATE");
            tableMapping.ColumnMappings.Add("ASSIGNED_USER", "ASSIGNED_USER");
            tableMapping.ColumnMappings.Add("CUR_TEAM", "CUR_TEAM");
            tableMapping.ColumnMappings.Add("RegisteredKm", "RegisteredKm");
            tableMapping.ColumnMappings.Add("OVERTIME_HOURS", "OVERTIME_HOURS");
            tableMapping.ColumnMappings.Add("GAS_COST", "GAS_COST");
            tableMapping.ColumnMappings.Add("GAS_COST_CREDIT", "GAS_COST_CREDIT");
            tableMapping.ColumnMappings.Add("TOLL_COST", "TOLL_COST");
            tableMapping.ColumnMappings.Add("CONSUMABLES_COST", "CONSUMABLES_COST");
            tableMapping.ColumnMappings.Add("CONSUMABLES_COST_CREDIT", "CONSUMABLES_COST_CREDIT");
            tableMapping.ColumnMappings.Add("OUT_OF_BASE_OVERNIGHT_COST", "OUT_OF_BASE_OVERNIGHT_COST");
            tableMapping.ColumnMappings.Add("OUT_OF_BASE_OVERNIGHT_COST_CREDIT", "OUT_OF_BASE_OVERNIGHT_COST_CREDIT");
            tableMapping.ColumnMappings.Add("OUT_OF_BASE_MEALS_COST", "OUT_OF_BASE_MEALS_COST");
            tableMapping.ColumnMappings.Add("TAXI", "TAXI");
            tableMapping.ColumnMappings.Add("TAXI_CREDIT", "TAXI_CREDIT");
            tableMapping.ColumnMappings.Add("PARKING", "PARKING");
            tableMapping.ColumnMappings.Add("PARKING_CREDIT", "PARKING_CREDIT");
            tableMapping.ColumnMappings.Add("OTHER_CAR_EXPENSES", "OTHER_CAR_EXPENSES");
            tableMapping.ColumnMappings.Add("OTHER_CAR_EXPENSES_CREDIT", "OTHER_CAR_EXPENSES_CREDIT");
            tableMapping.ColumnMappings.Add("FERRY_TICKETS", "FERRY_TICKETS");
            tableMapping.ColumnMappings.Add("FERRY_TICKETS_CREDIT", "FERRY_TICKETS_CREDIT");
            tableMapping.ColumnMappings.Add("FERRY_CAR_LIMIT_VIOLATION", "FERRY_CAR_LIMIT_VIOLATION");
            tableMapping.ColumnMappings.Add("FERRY_CAR_LIMIT_VIOLATION_CREDIT", "FERRY_CAR_LIMIT_VIOLATION_CREDIT");
            tableMapping.ColumnMappings.Add("AIRLINE_TICKETS", "AIRLINE_TICKETS");
            tableMapping.ColumnMappings.Add("AIRLINE_TICKETS_CREDIT", "AIRLINE_TICKETS_CREDIT");
            tableMapping.ColumnMappings.Add("AIRLINE_OVERWEIGHT", "AIRLINE_OVERWEIGHT");
            tableMapping.ColumnMappings.Add("AIRLINE_OVERWEIGHT_CREDIT", "AIRLINE_OVERWEIGHT_CREDIT");
            tableMapping.ColumnMappings.Add("OTHER_TICKETS", "OTHER_TICKETS");
            tableMapping.ColumnMappings.Add("OTHER_TICKETS_CREDIT", "OTHER_TICKETS_CREDIT");
            tableMapping.ColumnMappings.Add("OFFICE_EXPENSES", "OFFICE_EXPENSES");
            tableMapping.ColumnMappings.Add("OFFICE_EXPENSES_CREDIT", "OFFICE_EXPENSES_CREDIT");
            tableMapping.ColumnMappings.Add("ADVANCE_AMOUNT", "ADVANCE_AMOUNT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Production"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.Reporting_SCH_Expenses";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FROM_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TO_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TT_USER", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Expenses_Dat.Reporting_SCH_ExpensesDataTable dataTable, global::System.Nullable<global::System.DateTime> FROM_DATE, global::System.Nullable<global::System.DateTime> TO_DATE, string TT_USER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FROM_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FROM_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TO_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(TO_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TT_USER == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(TT_USER));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Expenses_Dat.Reporting_SCH_ExpensesDataTable GetData(global::System.Nullable<global::System.DateTime> FROM_DATE, global::System.Nullable<global::System.DateTime> TO_DATE, string TT_USER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FROM_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FROM_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TO_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(TO_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TT_USER == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(TT_USER));
            }
            Expenses_Dat.Reporting_SCH_ExpensesDataTable dataTable = new Expenses_Dat.Reporting_SCH_ExpensesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Expenses_Dat dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Expenses_Dat dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Expenses_Dat dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Expenses_Dat dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591